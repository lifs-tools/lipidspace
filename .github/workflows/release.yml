# create a release workflow from the main branch
name: Release LipidSpace

on:
  release:
    types: [ created ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: "ubuntu-latest"
    env:
        BUILD_DATE: ${{ github.run_id }}.${{ github.run_attempt }}
        RELEASE_VERSION: ${{ github.ref_name }}
        OS: "Linux"
    steps:
    - uses: actions/checkout@v3
      with:
        lfs: 'true'
    - name: Set Git user
      run: |
        git config --global committer.email "noreply@github.com"
        git config --global committer.name "GitHub"
        git config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --global author.name "${GITHUB_ACTOR}"

    - name: Install dependencies
      run: |
        DEBIAN_FRONTEND=noninteractive sudo apt update
        sudo apt install -y --no-install-recommends \
        build-essential \
        libfontconfig1 \
        qt6-base-dev \
        qt6-base-dev-tools \
        libqt6svg6-dev \
        libqt6svgwidgets6 \
        libopenblas-base \
        libopenblas-dev \
        libomp-dev \
        mesa-common-dev \
        libglu1-mesa-dev \
        libc6 \
        libstdc++6

    - name: Build LipidSpace
      run: |
        qmake6 LipidSpace.pro
        make clean
        make build

    - name: Rename LipidSpace.zip to include RELEASE_VERSION
      run: |
        mv Build/LipidSpace.zip Build/LipidSpace-${{ env.RELEASE_VERSION }}-${{ env.OS }}.zip

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      # only upload binaries on release creation, not on manual trigger
      if: github.event_name != 'workflow_dispatch'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: Build/LipidSpace-${{ env.RELEASE_VERSION }}-${{ env.OS }}.zip
        asset_name: LipidSpace-${{ env.RELEASE_VERSION }}-${{ env.OS }}.zip
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

  build-windows:
    runs-on: "windows-latest"
    env:
        BUILD_DATE: ${{ github.run_id }}.${{ github.run_attempt }}
        RELEASE_VERSION: ${{ github.ref_name }}
        OS: "Windows"
        QT_VERSION: "6.2.4"
    steps:
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        version: ${{ env.QT_VERSION }}
        target: "desktop"
        host: "windows"
        arch: "win64_msvc2019_64"
        cache: "true"
        cache-key-prefix: "install-qt"
        set-env: "true"
        dir: ${{ runner.temp }}
    - uses: actions/checkout@v3
      with:
        lfs: 'true'
    - name: Set Git user
      run: |
        git.exe config --global committer.email "noreply@github.com"
        git.exe config --global committer.name "GitHub"
        git.exe config --global author.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git.exe config --global author.name "${GITHUB_ACTOR}"
      shell: cmd

    - name: Prepare QT Project makefiles
      run: |
        qmake LipidSpace.pro -spec win32-msvc
      shell: cmd

    - name: Attach makefile as build artifact
      uses: actions/upload-artifact@v4
      with:
        name: Makefile.release
        path: Makefile.Release

    - name: Clean LipidSpace
      run: |
        win-clean.bat
      shell: cmd

    - name: Build LipidSpace
      run: |
        win-build.bat
      shell: cmd

    - name: Rename LipidSpace.zip to include RELEASE_VERSION
      run: |
        move Build/LipidSpace.zip Build/LipidSpace-${{ env.RELEASE_VERSION }}-${{ env.OS }}.zip
      shell: cmd

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
        # only upload binaries on release creation, not on manual trigger
      if: github.event_name != 'workflow_dispatch'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: Build/LipidSpace-${{ env.RELEASE_VERSION }}-${{ env.OS }}.zip
        asset_name: LipidSpace-${{ env.RELEASE_VERSION }}-${{ env.OS }}.zip
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

